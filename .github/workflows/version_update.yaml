name: Update v2rayN version and publish to AUR

on:
  schedule:
    - cron: 0 0 * * * # 每天凌晨0点运行一次
  workflow_dispatch:

jobs:
  update-and-publish:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        repo: [v2rayn-bin]
    steps:

      - name: Checkout code
        uses: actions/checkout@v3
        with:
          fetch-depth: 0
          submodules: recursive

      - name: Get latest version
        id: get-latest-version
        run: |
          RELEASE_INFO=$(curl -s https://api.github.com/repos/2dust/v2rayN/releases/latest)
          LATEST_VERSION=$(echo "$RELEASE_INFO" | grep '"tag_name":' | cut -d '"' -f 4)
          echo "::set-output name=LATEST_VERSION::$LATEST_VERSION"

      - name: Check if update is needed
        id: check-update
        run: |
          cd ${{ matrix.repo }}
          CURRENT_VERSION=$(grep '^pkgver=' PKGBUILD | cut -d '=' -f 2-)
          if [ "$CURRENT_VERSION" == "${{ steps.get-latest-version.outputs.LATEST_VERSION }}" ]; then
            echo "Update is not needed."
            echo "::set-output name=skip::true"
          fi

      - name: Update PKGBUILD
        if: ${{ steps.check-update.outputs.skip != 'true' }}
        run: |
          cd ${{ matrix.repo }}
          echo "Updating PKGBUILD to version $LATEST_VERSION..."
          sed -i "s/^pkgver=.*/pkgver=$LATEST_VERSION/" PKGBUILD

      - name: Generate sha256sums
        if: ${{ steps.check-update.outputs.skip != 'true' }}
        run: |
          cd ${{ matrix.repo }}
          X86_64_URL="https://github.com/2dust/v2rayN/releases/download/$LATEST_VERSION/v2rayN-linux-64.zip"
          wget -q "$X86_64_URL"
          X86_64_SHA256SUM=$(sha256sum v2rayN-linux-64.zip | cut -d ' ' -f 1)
          ARM64_URL="https://github.com/2dust/v2rayN/releases/download/$LATEST_VERSION/v2rayN-linux-arm64.zip"
          wget -q "$ARM64_URL"
          ARM64_SHA256SUM=$(sha256sum v2rayN-linux-arm64.zip | cut -d ' ' -f 1)
          echo "X86_64_SHA256SUM=$X86_64_SHA256SUM"
          echo "ARM64_SHA256SUM=$ARM64_SHA256SUM"
          sed -i "s/^sha256sums_x86_64=.*/sha256sums_x86_64=($X86_64_SHA256SUM)/" PKGBUILD
          sed -i "s/^sha256sums_arm64=.*/sha256sums_arm64=($ARM64_SHA256SUM)/" PKGBUILD

      
      - name: Publish AUR package
        if: ${{ steps.check-update.outputs.skip != 'true' }}
        uses: KSXGitHub/github-actions-deploy-aur@v3.0.1
        with:
          pkgname: ${{matrix.repo}}
          test: false
          updpkgsums: false
          commit_username: "github-actions[bot]"
          commit_email: "github-actions[bot]@users.noreply.github.com"
          ssh_private_key: ${{ secrets.AUR_SSH_PRIVATE_KEY }}
          commit_message: "release ${{ steps.get-latest-version.outputs.LATEST_VERSION }}"
          allow_empty_commits: false
          pkgbuild: ${{matrix.repo}}/PKGBUILD
          assets: |
            ${{matrix.repo}}/v2rayN-bin.desktop
            ${{matrix.repo}}/v2rayN.png

