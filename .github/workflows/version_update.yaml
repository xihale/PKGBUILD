name: Update v2rayN version and publish to AUR

on:
  schedule:
    - cron: 0 0 * * * # 每天凌晨0点运行一次
  workflow_dispatch:

jobs:
  update-and-publish:
    runs-on: ubuntu-latest
    container:
      image: archlinux:latest
    strategy:
      matrix:
        repo: [v2rayn-bin]
    steps:
      - name: Install dependencies
        run: |
          pacman -Syu --noconfirm
          pacman -S --noconfirm base-devel git

      - name: Checkout code
        uses: actions/checkout@v3
        with:
          fetch-depth: 0
          submodules: recursive

      - name: Get latest version
        id: get-latest-version
        run: |
          RELEASE_INFO=$(curl -s https://api.github.com/repos/2dust/v2rayN/releases/latest)
          LATEST_VERSION=$(echo "$RELEASE_INFO" | grep '"tag_name":' | cut -d '"' -f 4)
          echo "LATEST_VERSION=$LATEST_VERSION" >> $GITHUB_ENV

      - name: Check if update is needed
        id: check-update
        run: |
          cd ${{ matrix.repo }}
          CURRENT_VERSION=$(grep '^pkgver=' PKGBUILD | cut -d '=' -f 2-)
          echo "CURRENT_VERSION=$CURRENT_VERSION"
          if [ "$CURRENT_VERSION" == "${{ env.LATEST_VERSION }}" ]; then
            echo "Update is not needed."
            echo "skip=true" >> "$GITHUB_ENV"
          fi

      - name: Update PKGBUILD
        if: ${{ env.skip != 'true' }}
        run: |
          cd ${{ matrix.repo }}
          echo "Updating PKGBUILD to version $LATEST_VERSION..."
          sed -i "s/^pkgver=.*/pkgver=$LATEST_VERSION/" PKGBUILD

      - name: Generate sha256sums
        if: ${{ env.skip != 'true' }}
        run: |
          cd ${{ matrix.repo }}
          X86_64_URL="https://github.com/2dust/v2rayN/releases/download/$LATEST_VERSION/v2rayN-linux-64.zip"
          wget -q "$X86_64_URL"
          X86_64_SHA256SUM=$(sha256sum v2rayN-linux-64.zip | cut -d ' ' -f 1)
          ARM64_URL="https://github.com/2dust/v2rayN/releases/download/$LATEST_VERSION/v2rayN-linux-arm64.zip"
          wget -q "$ARM64_URL"
          ARM64_SHA256SUM=$(sha256sum v2rayN-linux-arm64.zip | cut -d ' ' -f 1)
          echo "X86_64_SHA256SUM=$X86_64_SHA256SUM"
          echo "ARM64_SHA256SUM=$ARM64_SHA256SUM"
          sed -i "s/^sha256sums_x86_64=.*/sha256sums_x86_64=($X86_64_SHA256SUM)/" PKGBUILD
          sed -i "s/^sha256sums_arm64=.*/sha256sums_arm64=($ARM64_SHA256SUM)/" PKGBUILD

      - name: Push changes to AUR
        if: ${{ env.skip != 'true' }}
        run: |
          cd ${{ matrix.repo }}
          mkdir -p ~/.ssh
          echo "${{ secrets.AUR_SSH_KEY }}" > ~/.ssh/aur
          chmod 600 ~/.ssh/aur
          echo "Host aur.archlinux.org" >> ~/.ssh/config
          echo "  IdentityFile ~/.ssh/aur" >> ~/.ssh/config
          echo "  User aur" >> ~/.ssh/config
          ssh-keyscan -H aur.archlinux.org >> ~/.ssh/known_hosts
    
          makepkg --printsrcinfo > .SRCINFO
          makepkg
          makepkg --install

          git config user.name "github-actions[bot]"
          git config user.email "github-actions[bot]@users.noreply.github.com"
          git add PKGBUILD .SRCINFO
          git commit -m "release $VERSION"
          git push origin master

